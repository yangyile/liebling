{{!--
This template is used for the posts that are marked as pages.
--}}

{{!-- The tag below means: insert everything in this file
into the {body} of the default.hbs template --}}
{{!< default}}

{{!-- Everything inside the #post tags pulls data from the post --}}
{{#post}}
  <div class="main-wrap">
    {{!-- Special header.hbs partial to generate the <header> tag --}}
    {{> header background=feature_image}}
    {{!-- Inject styles of the hero image to make it responsive --}}
    {{> hero background=feature_image}}
    <div class="m-hero__content" data-aos="fade-down">
      <h1 class="m-hero-title bigger">{{title}}</h1>
      {{#if custom_excerpt}}
        <p class="m-hero-description">{{custom_excerpt}}</p>
      {{/if}}
    </div>
    </section>
    <main>
      <article>
        <div class="l-content">
          <div class="l-wrapper in-post" data-aos="fade-up" data-aos-delay="300">
            <div class="l-post-content">
              <div class="pos-relative js-post-content">
                <div class="archives"></div>
              </div>
            </div>
          </div>
        </div>
      </article>
    </main>
  </div>
{{/post}}
<!--ghost content api-->
<script src="https://unpkg.com/@tryghost/content-api@1.4.1/umd/content-api.min.js"></script>
<!--moment js-->
<script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.27.0/moment.min.js"></script>

<script type = "text/javascript">
  /**
    * 调用ghost content API，完成文章归档功能
    */
  const api = new GhostContentAPI({
    url: 'https://chly-yile.com',
    key: '0b3cdc24279b8c023eac4b62b3',
    version: "v3"
  });
  api.posts
    .browse({limit: "all", include: "tags,authors", order: "published_at desc"})
    .then((posts) => {
        posts.forEach((post, index) => {
          const time = moment(post.published_at);
          const year = time.get('y');
          const month = time.get('M')+1;
          let date = time.format('YYYY-MM-DD');
          const title = post.title;
          const url = "{{@blog.url}}"+post.url;
          const parent = document.querySelector(".archives");
          const itemWrapper = document.createElement('div');
          itemWrapper.className = 'item';
          //首篇文章与其余文章分步操作
          if (index > 0) {
            const pre_month = moment(post.published_at).get('month')+1;
            //如果当前文章的发表月份与前篇文章发表月份相同，则在该月份ul下插入该文章
            if (month == pre_month) {
              const liWrapper = document.createElement('li');
              const html = "<time>" 
                + date 
                + "</time><a href='" 
                + url 
                + "' style='color: #4fc3f7'>"
                + title
                + "</a>";
              liWrapper.innerHTML = html;
              const temp = document.querySelector(".archives .list-"+year+"-"+month);
              temp.append(liWrapper);
            }
            //当月份不同时，插入新的月份
            else{
              const html = "<h3><i class='fa fa-calendar fa-fw' aria-hidden='true'></i> "+year+"-"+month+"</h3><ul class='archives-list list-"+year+"-"+month+"'><li><time>"+date+"</time><a href='"+url+"' style='color: #4fc3f7'>"+title+"</a></li></ul>";
              itemWrapper.innerHTML = html;
              parent.append(itemWrapper);
            }
          }else{
            const html = "<h3><i class='fa fa-calendar fa-fw' aria-hidden='true'></i> "+year+"-"+month+"</h3><ul class='archives-list list-"+year+"-"+month+"'><li><time>"+date+"</time><a href='"+url+"' style='color: #4fc3f7'>"+title+"</a></li></ul>";
            itemWrapper.innerHTML = html;
            parent.append(itemWrapper);
          }
        });
    })
    .catch((err) => {
        console.error(err);
    });
</script>
{{!-- The #contentFor helper here will send everything inside it up to the matching #block helper found in default.hbs --}}
{{#contentFor "scripts"}}
  <script defer src="{{asset "js/page.js"}}"></script>
{{/contentFor}}